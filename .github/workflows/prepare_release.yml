name: Prepare for release
on:
  issues:
    types: [ opened ]

env:
  ISSUE_TITLE_PATTERN: "^release\\ (v[0-9]+\\.[0-9]+\\.[0-9]+)$"
  VERSION_FILE_NAME: version

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.parse_issue_title.outputs.ver }}
    steps:
      - name: Check issue title
        id: check_issue_title
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          if [[ ${ISSUE_TITLE} =~ ${ISSUE_TITLE_PATTERN} ]]; then \
            ver="${BASH_REMATCH[1]}"; \
            echo "::set-output name=ver::${ver}"; \
            echo "This issue requests to release new version: ${ver}"; \
          else \
            echo "This issue doesn't request to release."; \
          fi

  new_branch:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    if: ${{ needs.prepare.outputs.ver != '' }}
    env:
      VERSION: ${{ needs.prepare.outputs.ver }}
      BRANCH_NAME: release/${{ needs.prepare.outputs.ver }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - name: Create/Push new release branch
        run: |
          git checkout -b ${BRANCH_NAME}
          echo -n "${VERSION}" > ./${VERSION_FILE_NAME}
          git add ./${VERSION_FILE_NAME}
          git commit -m "update version file for ${VERSION}"
          git push origin ${BRANCH_NAME}
